<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1103.2343                               -->
<workbook source-build='10.1.1 (10100.16.1103.2343)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='all_buildings_dataframe' inline='true' name='federated.0j4lwll09yo2m81909x5u0n7rsme' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_buildings_dataframe' name='textscan.0eaardl1g9oasb13h0qjb0nysgrd'>
            <connection class='textscan' directory='/Users/shivamgoel/Desktop/Midterm/rfc' filename='all_buildings_dataframe.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0eaardl1g9oasb13h0qjb0nysgrd' name='all_buildings_dataframe.csv' table='[all_buildings_dataframe#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='X' ordinal='1' />
            <column datatype='integer' name='BuildingID' ordinal='2' />
            <column datatype='string' name='vac' ordinal='3' />
            <column datatype='integer' name='meternumb' ordinal='4' />
            <column datatype='string' name='type' ordinal='5' />
            <column datatype='date' name='date' ordinal='6' />
            <column datatype='integer' name='hour' ordinal='7' />
            <column datatype='integer' name='Consumption' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='integer' name='Month' ordinal='10' />
            <column datatype='integer' name='Day' ordinal='11' />
            <column datatype='integer' name='Day of Week' ordinal='12' />
            <column datatype='integer' name='Weekday' ordinal='13' />
            <column datatype='integer' name='Holiday' ordinal='14' />
            <column datatype='integer' name='Base_hour_Flag' ordinal='15' />
            <column datatype='string' name='Address' ordinal='16' />
            <column datatype='integer' name='FloorArea_mSqr' ordinal='17' />
            <column datatype='real' name='Latitude' ordinal='18' />
            <column datatype='real' name='Longitude' ordinal='19' />
            <column datatype='string' name='nearestAirport' ordinal='20' />
            <column datatype='real' name='kwh_per_meter_sq' ordinal='21' />
            <column datatype='real' name='base_hr_usage' ordinal='22' />
            <column datatype='string' name='base_hr_class' ordinal='23' />
            <column datatype='real' name='TemperatureF' ordinal='24' />
            <column datatype='real' name='Dew_PointF' ordinal='25' />
            <column datatype='real' name='Humidity' ordinal='26' />
            <column datatype='real' name='Sea_Level_PressureIn' ordinal='27' />
            <column datatype='real' name='VisibilityMPH' ordinal='28' />
            <column datatype='real' name='Wind_SpeedMPH' ordinal='29' />
            <column datatype='real' name='WindDirDegrees' ordinal='30' />
            <column datatype='real' name='Gust_SpeedMPH' ordinal='31' />
            <column datatype='string' name='Conditions' ordinal='32' />
            <column datatype='string' name='Wind_Direction' ordinal='33' />
            <column datatype='string' name='Events' ordinal='34' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BuildingID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BuildingID]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>BuildingID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vac</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vac]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>vac</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>meternumb</remote-name>
            <remote-type>20</remote-type>
            <local-name>[meternumb]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>meternumb</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Consumption]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Consumption</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day of Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day of Week]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Day of Week</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weekday]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Weekday</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Holiday]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Holiday</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base_hour_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base_hour_Flag]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Base_hour_Flag</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FloorArea_mSqr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FloorArea_mSqr]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>FloorArea_mSqr</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nearestAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nearestAirport]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>nearestAirport</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kwh_per_meter_sq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kwh_per_meter_sq]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>kwh_per_meter_sq</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_hr_usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_hr_usage]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>base_hr_usage</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_hr_class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[base_hr_class]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>base_hr_class</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TemperatureF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TemperatureF]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>TemperatureF</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dew_PointF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dew_PointF]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Dew_PointF</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Humidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Humidity]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Humidity</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sea_Level_PressureIn</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sea_Level_PressureIn]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Sea_Level_PressureIn</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VisibilityMPH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VisibilityMPH]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>VisibilityMPH</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_SpeedMPH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind_SpeedMPH]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Wind_SpeedMPH</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WindDirDegrees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WindDirDegrees]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>WindDirDegrees</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gust_SpeedMPH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gust_SpeedMPH]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Gust_SpeedMPH</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conditions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Conditions]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Conditions</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_Direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Wind_Direction]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Wind_Direction</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Events</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Events]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Events</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Base hour Flag' datatype='integer' name='[Base_hour_Flag]' role='measure' type='quantitative' />
      <column caption='Building ID' datatype='integer' name='[BuildingID]' role='dimension' type='ordinal' />
      <column caption='NeuralNetwork' datatype='real' name='[Calculation_1759922305410887680]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL( &quot;&#10;    kwh &lt;- .arg1&#10;    temperature &lt;- .arg2&#10;    hour &lt;- .arg3&#10;    day_of_week &lt;- .arg4&#10;    month&lt;- .arg5&#10;    area &lt;- .arg6&#10;    &#10;    fit &lt;- lm(kwh ~ temperature + hour + day_of_week + month + area)&#10;    &#10;    fit$fitted&#10;&quot;&#10;, AVG( [kwh_per_meter_sq] ), AVG([hour]), AVG([TemperatureF]) ,AVG([Day of Week]), AVG([Month]),&#10;AVG([FloorArea_mSqr]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Day of Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column caption='Dew PointF' datatype='real' name='[Dew_PointF]' role='measure' type='quantitative' />
      <column caption='FloorArea mSqr' datatype='integer' name='[FloorArea_mSqr]' role='measure' type='quantitative' />
      <column caption='Gust SpeedMPH' datatype='real' name='[Gust_SpeedMPH]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Sea Level PressureIn' datatype='real' name='[Sea_Level_PressureIn]' role='measure' type='quantitative' />
      <column caption='Temperature F' datatype='real' name='[TemperatureF]' role='measure' type='quantitative' />
      <column caption='Visibility MPH' datatype='real' name='[VisibilityMPH]' role='measure' type='quantitative' />
      <column caption='Wind Dir Degrees' datatype='real' name='[WindDirDegrees]' role='measure' type='quantitative' />
      <column caption='Wind Direction' datatype='string' name='[Wind_Direction]' role='dimension' type='nominal' />
      <column caption='Wind SpeedMPH' datatype='real' name='[Wind_SpeedMPH]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Base Hr Class' datatype='string' name='[base_hr_class]' role='dimension' type='nominal' />
      <column caption='Base Hr Usage' datatype='real' name='[base_hr_usage]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Kwh Per Meter Sq' datatype='real' name='[kwh_per_meter_sq]' role='measure' type='quantitative' />
      <column caption='Meternumb' datatype='integer' name='[meternumb]' role='measure' type='quantitative' />
      <column caption='Nearest Airport' datatype='string' name='[nearestAirport]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.29901' measure-ordering='alphabetic' measure-percentage='0.70099' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_buildings_dataframe' name='federated.0j4lwll09yo2m81909x5u0n7rsme' />
          </datasources>
          <datasource-dependencies datasource='federated.0j4lwll09yo2m81909x5u0n7rsme'>
            <column caption='Building ID' datatype='integer' name='[BuildingID]' role='dimension' type='ordinal' />
            <column caption='NeuralNetwork' datatype='real' name='[Calculation_1759922305410887680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL( &quot;&#10;    kwh &lt;- .arg1&#10;    temperature &lt;- .arg2&#10;    hour &lt;- .arg3&#10;    day_of_week &lt;- .arg4&#10;    month&lt;- .arg5&#10;    area &lt;- .arg6&#10;    &#10;    fit &lt;- lm(kwh ~ temperature + hour + day_of_week + month + area)&#10;    &#10;    fit$fitted&#10;&quot;&#10;, AVG( [kwh_per_meter_sq] ), AVG([hour]), AVG([TemperatureF]) ,AVG([Day of Week]), AVG([Month]),&#10;AVG([FloorArea_mSqr]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Day of Week]' role='dimension' type='quantitative' />
            <column caption='FloorArea mSqr' datatype='integer' name='[FloorArea_mSqr]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Temperature F' datatype='real' name='[TemperatureF]' role='measure' type='quantitative' />
            <column-instance column='[kwh_per_meter_sq]' derivation='Avg' name='[avg:kwh_per_meter_sq:qk]' pivot='key' type='quantitative' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column caption='Kwh Per Meter Sq' datatype='real' name='[kwh_per_meter_sq]' role='measure' type='quantitative' />
            <column-instance column='[BuildingID]' derivation='None' name='[none:BuildingID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1759922305410887680]' derivation='User' name='[usr:Calculation_1759922305410887680:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0j4lwll09yo2m81909x5u0n7rsme].[none:BuildingID:ok]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j4lwll09yo2m81909x5u0n7rsme].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j4lwll09yo2m81909x5u0n7rsme].[avg:kwh_per_meter_sq:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0j4lwll09yo2m81909x5u0n7rsme].[usr:Calculation_1759922305410887680:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0j4lwll09yo2m81909x5u0n7rsme].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0j4lwll09yo2m81909x5u0n7rsme].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j4lwll09yo2m81909x5u0n7rsme].[Multiple Values]</rows>
        <cols>([federated.0j4lwll09yo2m81909x5u0n7rsme].[none:BuildingID:ok] / [federated.0j4lwll09yo2m81909x5u0n7rsme].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='139'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j4lwll09yo2m81909x5u0n7rsme].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      4O+fAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
