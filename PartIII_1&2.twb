<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.1004.1720                               -->
<workbook source-build='10.0.2 (10000.16.1004.1720)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='all_buildings_dataframe' inline='true' name='federated.1bp58vf04gszwb185fc590x5iiwj' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_buildings_dataframe' name='textscan.13kyt2i1ekaram1fasjrl1cwvzjg'>
            <connection class='textscan' directory='C:/Users/nanand/Desktop/ADS/MidtermProject/Final/Scripts/Output/OutputFromPart1' filename='all_buildings_dataframe.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.13kyt2i1ekaram1fasjrl1cwvzjg' name='all_buildings_dataframe.csv' table='[all_buildings_dataframe#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='X.x' ordinal='1' />
            <column datatype='integer' name='BuildingID' ordinal='2' />
            <column datatype='string' name='vac' ordinal='3' />
            <column datatype='integer' name='meternumb' ordinal='4' />
            <column datatype='string' name='type' ordinal='5' />
            <column datatype='date' name='date' ordinal='6' />
            <column datatype='integer' name='hour' ordinal='7' />
            <column datatype='integer' name='Consumption' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='integer' name='Month' ordinal='10' />
            <column datatype='integer' name='Day' ordinal='11' />
            <column datatype='integer' name='Day of Week' ordinal='12' />
            <column datatype='integer' name='Weekday' ordinal='13' />
            <column datatype='integer' name='Holiday' ordinal='14' />
            <column datatype='integer' name='Base_hour_Flag' ordinal='15' />
            <column datatype='string' name='Address' ordinal='16' />
            <column datatype='integer' name='FloorArea_mSqr' ordinal='17' />
            <column datatype='real' name='Latitude' ordinal='18' />
            <column datatype='real' name='Longitude' ordinal='19' />
            <column datatype='string' name='nearestAirport' ordinal='20' />
            <column datatype='real' name='kwh_per_meter_sq' ordinal='21' />
            <column datatype='real' name='base_hr_usage' ordinal='22' />
            <column datatype='string' name='base_hr_class' ordinal='23' />
            <column datatype='integer' name='X.y' ordinal='24' />
            <column datatype='real' name='TemperatureF' ordinal='25' />
            <column datatype='real' name='Dew_PointF' ordinal='26' />
            <column datatype='real' name='Humidity' ordinal='27' />
            <column datatype='real' name='Sea_Level_PressureIn' ordinal='28' />
            <column datatype='real' name='VisibilityMPH' ordinal='29' />
            <column datatype='real' name='Wind_SpeedMPH' ordinal='30' />
            <column datatype='real' name='WindDirDegrees' ordinal='31' />
            <column datatype='real' name='Gust_SpeedMPH' ordinal='32' />
            <column datatype='string' name='Conditions' ordinal='33' />
            <column datatype='string' name='Wind_Direction' ordinal='34' />
            <column datatype='string' name='Events' ordinal='35' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X.x</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X.x]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>X.x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BuildingID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BuildingID]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>BuildingID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vac</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vac]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>vac</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>meternumb</remote-name>
            <remote-type>20</remote-type>
            <local-name>[meternumb]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>meternumb</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Consumption]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Consumption</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day of Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day of Week]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Day of Week</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weekday]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Weekday</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Holiday]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Holiday</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base_hour_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base_hour_Flag]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Base_hour_Flag</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FloorArea_mSqr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FloorArea_mSqr]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>FloorArea_mSqr</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nearestAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nearestAirport]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>nearestAirport</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kwh_per_meter_sq</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kwh_per_meter_sq]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>kwh_per_meter_sq</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_hr_usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_hr_usage]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>base_hr_usage</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_hr_class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[base_hr_class]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>base_hr_class</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X.y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X.y]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>X.y</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TemperatureF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TemperatureF]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>TemperatureF</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dew_PointF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dew_PointF]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Dew_PointF</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Humidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Humidity]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Humidity</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sea_Level_PressureIn</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sea_Level_PressureIn]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Sea_Level_PressureIn</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VisibilityMPH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VisibilityMPH]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>VisibilityMPH</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_SpeedMPH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind_SpeedMPH]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Wind_SpeedMPH</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WindDirDegrees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WindDirDegrees]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>WindDirDegrees</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gust_SpeedMPH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gust_SpeedMPH]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Gust_SpeedMPH</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conditions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Conditions]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Conditions</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_Direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Wind_Direction]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Wind_Direction</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Events</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Events]</local-name>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias>Events</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_buildings_dataframe.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Base hour Flag' datatype='integer' name='[Base_hour_Flag]' role='measure' type='quantitative' />
      <column caption='Building ID' datatype='integer' name='[BuildingID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Day of Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column caption='Dew PointF' datatype='real' name='[Dew_PointF]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column caption='FloorArea mSqr' datatype='integer' name='[FloorArea_mSqr]' role='measure' type='quantitative' />
      <column caption='Gust SpeedMPH' datatype='real' name='[Gust_SpeedMPH]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Sea Level PressureIn' datatype='real' name='[Sea_Level_PressureIn]' role='measure' type='quantitative' />
      <column caption='Temperature F' datatype='real' name='[TemperatureF]' role='measure' type='quantitative' />
      <column caption='Visibility MPH' datatype='real' name='[VisibilityMPH]' role='measure' type='quantitative' />
      <column caption='Wind Dir Degrees' datatype='real' name='[WindDirDegrees]' role='measure' type='quantitative' />
      <column caption='Wind Direction' datatype='string' name='[Wind_Direction]' role='dimension' type='nominal' />
      <column caption='Wind SpeedMPH' datatype='real' name='[Wind_SpeedMPH]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[X.x]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[X.y]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Base Hr Class' datatype='string' name='[base_hr_class]' role='dimension' type='nominal' />
      <column caption='Base Hr Usage' datatype='real' name='[base_hr_usage]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Kwh Per Meter Sq' datatype='real' name='[kwh_per_meter_sq]' role='measure' type='quantitative' />
      <column caption='Meternumb' datatype='integer' name='[meternumb]' role='measure' type='quantitative' />
      <column caption='Nearest Airport' datatype='string' name='[nearestAirport]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
      <column-instance column='[base_hr_class]' derivation='Count' name='[cnt:base_hr_class:qk]' pivot='key' type='quantitative' />
      <column-instance column='[base_hr_class]' derivation='CountD' name='[ctd:base_hr_class:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BuildingID]' derivation='None' name='[none:BuildingID:ok]' pivot='key' type='ordinal' />
      <column-instance column='[base_hr_class]' derivation='None' name='[none:base_hr_class:nk]' pivot='key' type='nominal' />
      <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TemperatureF]' derivation='Sum' name='[sum:TemperatureF:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.452145' measure-ordering='alphabetic' measure-percentage='0.547855' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BuildingID:ok]' type='palette'>
            <map to='#499894'>
              <bucket>5310</bucket>
            </map>
            <map to='#499894'>
              <bucket>5358</bucket>
            </map>
            <map to='#499894'>
              <bucket>75696</bucket>
            </map>
            <map to='#499894'>
              <bucket>75716</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5198</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5333</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>28096</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>75708</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5290</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5352</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>75691</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>75712</bucket>
            </map>
            <map to='#79706e'>
              <bucket>5316</bucket>
            </map>
            <map to='#79706e'>
              <bucket>28162</bucket>
            </map>
            <map to='#79706e'>
              <bucket>75700</bucket>
            </map>
            <map to='#79706e'>
              <bucket>75720</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>5311</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>75697</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>75717</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5304</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5355</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>75692</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>75713</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>5329</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>75706</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>84681</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>5199</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>5335</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>28168</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>75709</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>5323</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>75704</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>81909</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5306</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5356</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>75693</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>75714</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>5317</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>75701</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>75721</bucket>
            </map>
            <map to='#d37295'>
              <bucket>5318</bucket>
            </map>
            <map to='#d37295'>
              <bucket>30602</bucket>
            </map>
            <map to='#d37295'>
              <bucket>75702</bucket>
            </map>
            <map to='#d37295'>
              <bucket>82254</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>5325</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>75705</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>83427</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>5332</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>75707</bucket>
            </map>
            <map to='#e15759'>
              <bucket>5313</bucket>
            </map>
            <map to='#e15759'>
              <bucket>28108</bucket>
            </map>
            <map to='#e15759'>
              <bucket>75698</bucket>
            </map>
            <map to='#e15759'>
              <bucket>75718</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>5308</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>5357</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>75694</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>75715</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5286</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5340</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>75689</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>75710</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>5322</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>75703</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>77662</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>5314</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>28161</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>75699</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>75719</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5288</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5351</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>75690</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>75711</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[cnt:base_hr_class:qk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;HIGH&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[ctd:base_hr_class:qk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;HIGH&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:base_hr_class:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;HIGH&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:TemperatureF:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:base_hr_class:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;HIGH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Count of Base Hour Consumption(High/Low) For Each Building for each Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Count of Base Hour Consumption(High/Low) For Each Building for each Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
          </datasources>
          <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
            <column caption='Base Hr Class' datatype='string' name='[base_hr_class]' role='dimension' type='nominal' />
            <column-instance column='[hour]' derivation='Count' name='[cnt:hour:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[base_hr_class]' derivation='None' name='[none:base_hr_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]'>
            <groupfilter function='member' level='[mn:date:ok]' member='4' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1bp58vf04gszwb185fc590x5iiwj].[cnt:hour:qk]' scope='rows' value='Count of High/Low Base Hour Class' />
            <format attr='subtitle' class='0' field='[federated.1bp58vf04gszwb185fc590x5iiwj].[cnt:hour:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1bp58vf04gszwb185fc590x5iiwj].[cnt:hour:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:base_hr_class:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bp58vf04gszwb185fc590x5iiwj].[cnt:hour:qk]</rows>
        <cols>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Electricity Consumption for 32 Buildings over different Months'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Electricity Consumption for 32 Buildings over different Months</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
          </datasources>
          <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;elect&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]'>
            <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 3&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</column>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</column>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]</rows>
        <cols>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Electricity Consumption for 78 Unique BuildingIDs for Year 2013'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Electricity Consumption for 78 Unique BuildingIDs for Year 2013</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
          </datasources>
          <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
            <column caption='Building ID' datatype='integer' name='[BuildingID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Meternumb' datatype='integer' name='[meternumb]' role='measure' type='quantitative' />
            <column-instance column='[BuildingID]' derivation='None' name='[none:BuildingID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[meternumb]' derivation='None' name='[none:meternumb:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:meternumb:ok]'>
            <groupfilter function='member' level='[none:meternumb:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;elect&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</column>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:meternumb:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
              <color column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:BuildingID:ok]' />
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Electricity Consumption of 32 Buildings for Year 2013'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Electricity Consumption of 32 Buildings for Year 2013</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
          </datasources>
          <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;elect&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
              <color column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]' />
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Heating Consumption for 32 Buildings'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Heating Consumption of 32 Buildings for Year 2013</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
          </datasources>
          <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Dist_Heating&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
              <color column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]' />
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Heating Consumption for 32 Buildings over different Months'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Heating Consumption for 32 Buildings over different Months</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
          </datasources>
          <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Dist_Heating&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]'>
            <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 29&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</column>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</column>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]</rows>
        <cols>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Heating Consumption for 78 Unique BuildingIDs for Year 2013'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Heating Consumption for 78 Unique BuildingIDs for Year 2013</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
          </datasources>
          <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
            <column caption='Building ID' datatype='integer' name='[BuildingID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Meternumb' datatype='integer' name='[meternumb]' role='measure' type='quantitative' />
            <column-instance column='[BuildingID]' derivation='None' name='[none:BuildingID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[meternumb]' derivation='None' name='[none:meternumb:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:meternumb:ok]'>
            <groupfilter function='member' level='[none:meternumb:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Dist_Heating&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</column>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:meternumb:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
              <color column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:BuildingID:ok]' />
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Influence of Temperature over Electricity Consumption for each Building'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Influence of Temperature over Electricity Consumption for each Building</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
          </datasources>
          <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Temperature F' datatype='real' name='[TemperatureF]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[TemperatureF]' derivation='None' name='[none:TemperatureF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' filter-group='4'>
            <groupfilter function='member' level='[mn:date:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;elect&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]'>
            <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 23&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</column>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</column>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]</rows>
        <cols>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:TemperatureF:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Influence of Temperature over Heating Consumption for each Building'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Influence of Temperature over Heating Consumption for each Building</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
          </datasources>
          <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Temperature F' datatype='real' name='[TemperatureF]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[TemperatureF]' derivation='None' name='[none:TemperatureF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' filter-group='4'>
            <groupfilter function='member' level='[mn:date:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Dist_Heating&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]'>
            <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 23&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</column>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</column>
            <column>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]</rows>
        <cols>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:TemperatureF:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Heating and Electricity Consumption over Year'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='Heating Consumption for 32 Buildings' w='42000' x='42000' y='0' />
              <zone h='50000' id='7' name='Electricity Consumption of 32 Buildings for Year 2013' w='42000' x='0' y='0' />
              <zone h='50000' id='8' name='Heating Consumption for 78 Unique BuildingIDs for Year 2013' w='42000' x='42000' y='50000' />
              <zone h='50000' id='9' name='Electricity Consumption for 78 Unique BuildingIDs for Year 2013' w='42000' x='0' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8625' id='6' name='Heating Consumption for 32 Buildings' pane-specification-id='0' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' type='color' w='16000' x='84000' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Heating and Electricity for Buildings over Months'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
      </datasources>
      <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
        <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Electricity Consumption for 32 Buildings over different Months' w='42000' x='42000' y='0' />
              <zone h='100000' id='7' name='Heating Consumption for 32 Buildings over different Months' w='42000' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='33500' id='6' name='Electricity Consumption for 32 Buildings over different Months' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]' type='filter' w='16000' x='84000' y='0' />
              <zone h='33000' id='8' name='Heating Consumption for 32 Buildings over different Months' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' type='filter' w='16000' x='84000' y='33500' />
              <zone h='33500' id='9' name='Heating Consumption for 32 Buildings over different Months' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]' type='filter' w='16000' x='84000' y='66500' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Influence of Temperature over Heating and Electricity'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='all_buildings_dataframe' name='federated.1bp58vf04gszwb185fc590x5iiwj' />
      </datasources>
      <datasource-dependencies datasource='federated.1bp58vf04gszwb185fc590x5iiwj'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
        <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Influence of Temperature over Heating Consumption for each Building' w='42000' x='42000' y='0' />
              <zone h='100000' id='8' name='Influence of Temperature over Electricity Consumption for each Building' w='42000' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='33500' id='6' name='Influence of Temperature over Heating Consumption for each Building' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' type='filter' w='16000' x='84000' y='0' />
              <zone h='33000' id='7' name='Influence of Temperature over Heating Consumption for each Building' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]' type='filter' w='16000' x='84000' y='33500' />
              <zone h='33500' id='9' name='Influence of Temperature over Electricity Consumption for each Building' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]' type='filter' w='16000' x='84000' y='66500' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows pres-mode='true' source-height='30'>
    <window class='worksheet' name='Heating Consumption for 32 Buildings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:BuildingID:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Electricity Consumption of 32 Buildings for Year 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:BuildingID:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:Year:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Heating Consumption for 78 Unique BuildingIDs for Year 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:meternumb:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:meternumb:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Electricity Consumption for 78 Unique BuildingIDs for Year 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:meternumb:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:meternumb:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:Consumption:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[sum:meternumb:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Electricity Consumption for 32 Buildings over different Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:Month:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Heating Consumption for 32 Buildings over different Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' type='filter' />
            <card param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:Month:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Count of Base Hour Consumption(High/Low) For Each Building for each Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:base_hr_class:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[cnt:hour:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:BuildingID:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:Day:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:Day:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:Month:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:base_hr_class:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:date:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Influence of Temperature over Heating Consumption for each Building'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]' type='filter' />
            <card param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:BuildingID:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:Month:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:TemperatureF:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Influence of Temperature over Electricity Consumption for each Building'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[mn:date:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:BuildingID:ok]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:Month:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:TemperatureF:qk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:type:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[none:vac:nk]</field>
            <field>[federated.1bp58vf04gszwb185fc590x5iiwj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Heating and Electricity Consumption over Year'>
      <viewpoints>
        <viewpoint name='Electricity Consumption for 78 Unique BuildingIDs for Year 2013' />
        <viewpoint name='Electricity Consumption of 32 Buildings for Year 2013' />
        <viewpoint name='Heating Consumption for 32 Buildings' />
        <viewpoint name='Heating Consumption for 78 Unique BuildingIDs for Year 2013' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Heating and Electricity for Buildings over Months'>
      <viewpoints>
        <viewpoint name='Electricity Consumption for 32 Buildings over different Months'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Heating Consumption for 32 Buildings over different Months'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Influence of Temperature over Heating and Electricity'>
      <viewpoints>
        <viewpoint name='Influence of Temperature over Electricity Consumption for each Building'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Influence of Temperature over Heating Consumption for each Building'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Count of Base Hour Consumption(High/Low) For Each Building for each Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Electricity Consumption for 32 Buildings over different Months' width='192'>
      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
      nEJKmvb/AQjkEdq1TJV4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Electricity Consumption for 78 Unique BuildingIDs for Year 2013' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAASaklEQVR4nO3dWZMb13nG8X/vjX3H7Ct3yZTESLKkWKqkcuG4Ukmu8knySfJJUpW7OHZS
      LsuRLVuWRMsyTXFIDmfjzGBfGg2gt1zMiCKtYUYskQMO+v1VqRrdfah6G5gH55xGA61EURQh
      REypky5AiEmSAIhY0x9fOWz1+OPdvUnVIp6RpqoU5kv0Rt6kS3npzGYS+FF4arsnAnDzzi7/
      +m///sKKEs9XwjJ4718+4I+H7UmX8tL5p2uLOOHo1HYyBBKx9tQArCxUKGdsVhcqpE2NUi6F
      AmiGSS6hP+2fiQmxDYP1Qoq0ZbKcTZAwDJazCUxd52Ihja5MusIJCQNq9+7Qa3eo3bvDaOTT
      a9Qhimhtb54cAM00WS5nGAcRiqZx/eIcV5erqJrCq+uLXFkpnfVhiFMsFTL4foCmKFRzWcqW
      SjWb4cZMlqHnE8b0ZLfvtGk1OmiaShR4bH/5JbtfbRD0DtnfPXhKDxDCwAt5bX0GXYXR2Oeg
      5ZBIZ1mrZlgoZc74MMRpesMxi6UCOR2iMCRSFKIooj30WC7lKFvapEucDF3HUAN2bm8QBBGG
      bZMrFQhDBSL/5ACEYUAQRXy1XSeXstlv9igVsyxlVP7jwy/4xRc7Z30Y4hSuH9BzHFx0fH/M
      KFIJ/DH7Aw9nOKQxCiZd4kSohoWCwuz6Cm6vR65Sot84pN5ySScsThzMR2HA57ceAHDY2QRg
      r7nxaH+rO3zxlYtn0hm4fDFwAaj1eWJ5043v66XqNqtv/hCAbPFdAPKVD473rjx9EpzN56mm
      DUDhlUtLLBSSLC9UsTVYnq9gH8+qrl5c4upCnvWVeebzNrMzZS7P5V7oQYlvS9s2r8/kUIGE
      aXJjNk/aMrkxV8DSNF6bLWAAmqbx+kyepGlyY7ZAOZXg7cUKM/Z0ntgI/SGbn36C6zg8+OwT
      Bs6Arc8/odtxIAqfEgBFZX1tkaWcCYrCQb1NuZABwyJrgKabpCwFUFiZydNwIKePmZ2p8ubV
      BYZePLvbSQoDn36kkdaAKKQTKmSUkIav8NZcATMKiYDVQobtgc87czks08TwR+z0R4z86XzN
      ho1d+r0htz/8Of3ugLu//hX9Xp/m7h5R4J0cgFQ2x2zWZK6cwzRMrq9VeLDfRtc1MkkLXdfI
      Ji1M0+DOg31+cGEWO5lAVyI6XYf15SpxPes2KZVsGnU8ZIxKKZ3C9D30RJJ0MOZwFOBicDFv
      EQKVxFHP3vdCUoZOXoe2P52niezSIjPzBbLzl5lZqqCbOoadwRv08Hzv5DmA02nxnx92yaZs
      ZvMmO4c9bNMgGjmMMDDGLkFksVSB3tDjsz/dRbUTjAcOimljETCdT+fLqz0YUrR0FrJJ6u4Q
      M2EwGI4wbIOHzQ7FlE2ITqvVpZC02Kh3WEjb7DoeuutPuvwXRlFUFDPNyto8rd1drrz/t7R3
      tzCTCXqd0ckBACAM6PYcur3HtrWPZ1XN/rfbu8fXo4wcet/eK16wjjuk4z62Pjy6DKDhHi13
      u4NH+x72jhpuHW8Lgul9u1I0g/LKCgDllVUAiktHyzRyKYSIOQmAiDUJgIg1CYCINQmAiDUJ
      gIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCI
      NQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJ
      gIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCI
      NQmAiDUJgIg1CYCINQmAiDUJgIg1fdIFCPEi5GyDpYR9ajsJwDn3SjVP0pSX8S/ZusZ2r3dq
      O3nmzrl7nT63Gp1Jl/HSWSklv1M7mQOIqRb5Y+58/BG1hwds/PY3dJpddr+6Q+SPuPfJxxIA
      Md08p02n7ZDOZTEtg9b+PsPBABQN09JlCDQtBnv3aN65g12dZdRqkSiX8UYBVkLDqdXJLq3S
      27xP4ca7JFKJSZd7ZlQzwfzaIvc+u0lppki75aAELr12GyOZlh5gWpi5ApqVJMSgdHERZ79O
      OOzh9j3KFy8QKTqJ+WWshDXpUs+UZiUx7SQX33wDVTdYffUq+WqVIABVN6UHmBbDRg3Vsknm
      UnT2mlRevUJne4d0tUhr95BEJoHXG+CPlzHt+LzvKapGeXkFgOrqGgD2+sXjvWUJwLRIL18m
      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
    </thumbnail>
    <thumbnail height='192' name='Electricity Consumption of 32 Buildings for Year 2013' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Heating Consumption for 32 Buildings' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Heating Consumption for 32 Buildings over different Months' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Heating Consumption for 78 Unique BuildingIDs for Year 2013' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAX1ElEQVR4nO3dWXPjWJre8T9IAgR3iuKijVoylZJyq8ysru7qqumeno7qGHsmwhGOGF/Z
      4S/hz+ELfwDf+s7hS4cjHDHu6a59y1py075LlLgvIAmCAHzBrOrKLlXbqmYlmcL7u6G4SOcF
      hYc4BwRwFNd1XYTwKN+oCxBilCQAwtMC371zXm3yaPtkVLV4Tn4ug+VXRl3GyCV0lbbVH0nb
      LwTgy81j/tN/+R8jKcSL/uN/+Dtq4cD/+4VX3L2pCQ4azZG0LV0g4WkXBsAXUFlbyJFLhpmf
      yZBLRllZyDE9ESaViOADcpkJkmH1JZd7NVlGncLmOka9TnF7g2apyNnmOq1ak9rxAf2+TfVw
      l15vNN2El8Xtm5zt7mP3e5zt7tK3epzt7GD1TE43ntHp9OjUKlj28HZcXhgA17GpmS6zmTiL
      6Sgds0fZsJjLxFleyqH7/AT9Civz2aEV4mU+TUfzmdQPd6m1bNRQGE11KG89pt5ocfLwXc6O
      ShS2dkdd6k/qfOMxzeIxx3snuJ0KRzvH0G+w9+gRrZaLX7HZ+uf/Ra1tD63NHwiAQzIc4Ol+
      hZbl8tq1LOm4zldbBU4rLQBiEV0GzEPiV4N0ugrpxXm0fo2zgwLddp/MTBp9IoXd66MoDq47
      vH/8OFL8Km6/h2v1sLRJpqdjmCTIL82Bdc6jf/49rU6PerE8tDZ/cAR2VqzStfrYrsv6/jl9
      JUAPP9OJGAm/QjSss5BL8vSoOrRiPMvtMzG7QEALoPhUMgtzuL024USc2qOvmHrwFqWNxyTn
      5kZd6U9qYi5PvWkSjwU5OzyiShajdI4RvYbiC3P7nb/B12ti64mhtal895vg//3xM9kL9BLJ
      XqCBsdwLtHJtlql4EIC15TnSiShvv3aNO/Mp9HCEuVQIULh1I89iJsrNG/OszCSYn5tifjLy
      suq/Ehy7x/nuoH/v2j0Ov/gUo9WlfX5Ao9bg4POPaNYNXNfm+KvPMJptihtfUytVKTx5SK1U
      G/ESDIfd61DYOwDAMmpsfvwx7UaD7U8/pWO02f38M8yejWtbnG7v4Dy/dW2LvYef0Gy0L93m
      hQEIhuPcnI1h2Q6EEoR6TeZzCT7dKNB3HFYWZ5lJDVbydtdiOp1kIZeg0ugxGfaRzqT+irfB
      e1zbwWwP/nl9o4RRb1M9PqSy+SXVmoWmB6mfFaB9RrlocPD57zneOsWHTb1YpnZyPOIlGA7H
      tjHbBjDYE+lzLY6fPcFsG2x/8gnJ2SkKe0e4rkO31cJ1HLqGgdUo02walE9OL93mDw6Cy40O
      a0vTaD6IxKIoOCzOJDkoW8xN6uSzCbSgitu3COpBNvcL3F2eIRgMosm3C5ei+Hz0Oy1Mw6Bn
      GKjROM2jTZqNLvWTQwKhCD2jha1OMnctRzAcJ5JMcLb5CF8gTN+8/CffOFJ8fsxmHbPdxuyY
      6JEQRrVOMBrGtno0SmV8foV+36XfbWN2TfodA6PRQAvH6LUv/z5c2AHtdVtsHAewLJupkM16
      oUWr3sT1++maFv/zj18TCmrk0xG6fZcvNw7RwhE+X98HLQS9zl/9ZniJa1tEJlI0z44JTs6S
      yp4TuXsHze9g9hxaZyfkFqZp1lrgDzL/4C26lQKBaJpe/Rw1nh71IgyFY/WIpVJUDveJTs8R
      iExw57d3qJycsPDa6zQKJ2iqi9E2iaVSmO02sVQKfzxHWtGI5mYv3aYMgkdIBsEDYzkIFsIL
      JADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQA
      wtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLT
      JADC0yQAwtMkAMLT5OL0I5QO68xmoqMuY+Q0/+g+hyUAI1QzTVo1Z9RljNza5PCmPb0s6QIJ
      T5MtwBgwa+fsP10nnpumflIgNZ+ndnxAJDdH5+yI9M371LYekVi6TXIyPupyrxTZAoyBYDJL
      diaD5oO2aRNO5ZjKz0CzTuLWa1S+/ANnZRPXle7SsEkAxoFr02z2iWUmScT8FA9PqNUMMgtZ
      Cl98jn9imojup3x4OOpKrxzpAo0FH7O3bqEoCvP3f4FfVXFdF59P4ebbaXwBFadvofjVURd6
      5UgAxoGi4FMUAAKa9vyhwX2/qr1wK4ZLukBjoN9psvnJ5wA4VofN9/6FWrHE1kcfYZttnv7L
      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
      /wKLvVeQ7SChnQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Heating and Electricity Consumption over Year' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Heating and Electricity for Buildings over Months' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29d3Tc133g+5neCzAzmBkMGtEIEmxiMUV12VIkx7ItOW3tjZ3mxEl23x/v
      nZPNe9lsTnY3e5LNvn0n8Ul2XSQ5lhVZlqxOURKpQlJiJwEW9N6BwfTeZ94fICmCGPQZFPL3
      OYcSZu793d+d373f323fIsrlcjkEBO5SxOtdAQGB9UQQAIG7GkEABO5qBAEQuKuZJQAdl1qI
      AwMdl/DH818QCXgIRJLE/RNc7BhYsPCwz8mL//I8LR2DhaovkGVycgqAU6dOL5gzND3M97//
      LPP8FKbH+nj+2Wf57FI7Yf80L73wE46fuwKAf2KAH/3oR7z06lsks7deFef0qYuceOcI4evf
      nDn6Lt6gn1MXO1b1yxaj49IpfvSjH/HOh6dm3f92JicnZ32+cu404fTnn0+dPkU2GWHKE8hz
      dY4zHx/hpy+/SaZgNQfP1CTJLEwMdDAw4V8w7/tv/JxTl+Z7llnee+NlXnjpFULxNOdOfMBP
      XniJYGzmB370zqv86Mc/5lrv6KyrZp5BmCPvnLj+TZIjh48i+eu//uu/vpHp5OEjVO3bS8fJ
      w6iq9nLl+Ju0DXmpMqv415deJpxRcPmjX/D6RxfZuWsn8RQMtV/ixImTGKw1TA9c5fCxE2gN
      JkqNOp579sf82m//PmVGNf3tF3n3o1PUNTZx5pN3OfHpWSrqtnLyyGtc7p9CmfYh0pXTcbmF
      kGuS46dOMDQ8xqnT52jcuoXDb73NpavdqKVx/vbv/gFLVQMKcRa9WsLLP/8FYq0Zz0gvp898
      hi8hodJm5pXnvs9ETMuOxjJe/cVraM0Oxof76Gi5jL2hHlFOxJ579vDLV16huamRbffcy5E3
      XuHQoUNM9bSAfT+S6ctQWsnI0ATp4BhJhZlowMdETw81e3dz/K1XOfbhp+z/0peIBSJMDLXz
      2YkTSAxWotMDvH74GHKtgcGrZ/nw08ts370dyQo70cnDx/jqH/0hu2uruHTi5Mz933yFIW+C
      CrOGV15+mUgsxj/+wz8i1VuIBly0XGmjVKvH5LBw7K1fMupLolNKmeq+wD/85HVKtEpSUi3O
      gU7UFhujVz6hM2TkG4/fC9kEr778c0IZBSnfGCdPn2HCl0Ce9PLK629jrqimv6sXaTqIJynh
      7IfvcuriVcb6O3HHxHgnB/n0+Mek5UZe/eHfcXEowM7GClAY6Ll0nBPn29ja4ODIO+9z9uIV
      tjXvwDfWw49e/CU79+ynr/UzWvsmqbdrOddylTFniMpyM2ZrJSJPL0MxLXaLkWpdkgvDcbZW
      W/nk+Fl+57d/nVdefweZBMrtdlpaLqIQyzBVGDh9vA2HRcIrb7yD0xe/fQoU44Uf/pBjn14k
      OtnOZx1ues9+wLAnRlVdE6eOf8j27c18+ZlvUYKPq72jtHX28swT93L09EWOnjjPU/c1cLlv
      AgCRQoNRo0SjkXP8TBvf+NJuXjt8gp6BMR65p5rzVzro6BogEAwx2HkJXxxaL7XSe/Uah578
      GiPDQzRZJQw5PXgSGnbbxUykDBzYfy8HdzdyqaWVN998m6/+1rc4efRtOq9e475f+SqXz38K
      wL59+3jqN3+D998+zG9961scfftNLpz+mMode1ECeo2MF3/yE3RllZjMpbz583/hoSeevvk0
      jh1+hR5nFL04QsvVXkZ7r+IKx2ltuQrA6NXPiBqaOHRPE6TDtFzt5VpbJ1995gk+PXqad46e
      4Lefuo/PLvfR3tFBNBIgtarX6kz7vH/iHACT7WfocMPZD47w1ptvcugrv87evfvYt/8ATz58
      kJNH32f3gXvpvNRKV+sJstZdPLCvmZbWS2xv3s69j36Ze/c1c+y99zh/pQ21RMS0c4qt25pQ
      aTScfOcN9v7Kr3Hl1Mf0dl5l232/Qt/l83R3dRBPJIhEw7S2XMU12suoy8/IVIRqbYzae79C
      97XzXG3r4Kvf+E1OffQBzdv38K1vfxPfaC+jw72cH4xwqE7Dsc8uMubLUa2NMuhOYKlq5N5D
      h9hWGmda7MCaneRCWy+fXOzjwD3bADH9nRc53TmB3aQh7BrlVE+IJ+/fAYB3sp/nf/qv2Bw1
      XGptBaC19RKdl1pvzgTeOHyMb/32N1FJ5qwBVHzne9/j8Qf3ozDYkKd86OzVuAbaaGnrJJ7K
      YCqz8cHrL+C+Pqaq1FrUCgXZrAhx0s9r7358s7SmilL+6X/9bz670I08G+SnLx+mcWstGq0W
      hUxGLpPBWGpicnQUfamJX774HKPuACBFrVGj02mQyWQAdLWe5p1P26mtsOOZ6OT81V4AGqpt
      vPD888h0VhDL0WlViCWzf1a1zcTzzz+HzlqBUmemvrIMgMsXLpCRygl63Xz05r8y6EnQ0nLp
      litFpGJhQikpw22nOHF9enSDEquDq58e4eK1vpvfyVVqVGoF4mwWtTjJS6+9O5O3xEjAM0ko
      mmZViESkUjNlGGwVpHzj2Kvr2Lq1htdffIHL3cMQ8/D+ifOU2KooL9UBYK6o5drJwxz97OJM
      PXUmOk9/QP90CpN4GoOjGYA9h77IsZd/wA+fe4mqxlre+td/ISxSIUWMXqdFIpagNxqR5hKM
      TPiZGm7jg+sCqVarkcmkqFRqpFIppKK8+C/PoTaXY3OYeOH5F0kDKI0knV28fuwC9dV2tDod
      MpmU7C1HUlpLBUOXP+HTa6NUmrVs3bYNqVgEMR8Xr/UhE2dxe6b48XMvkwh76Oz/fMojEkvw
      uF2Y5Bme++nPCNw2By5Ri3nppVeJZoBcAXnvjZdy//Pv/ibX0jtZyGJzudhk7oVXPyxsmWvA
      8ffeyH3/f/5d7nhL73pXZV5Soencf//7/y8XTGYLXvYLL75Y8DILjSiXE06CBe5ehG1Qgbua
      VQvApY9e4+LgFKdPXWSk/Qx/+48/oavlOH//g5eWVc7Flpabf7/9i2f57FIP2YSP/+f//q8k
      57km7p+gY2AC/EP87N1Tq/gVdy5C+yzMrG3Q1lMf8sbh90hK9bS1XsSmzXK+Z4pPDv+SM5d7
      qTHBK29/Qkamptys5YUf/5BLV65Rv/cBPCODtJw+SkRmZejqJ2T0NUiDw7z+znuUOOr57IPX
      uNwzgWvwKu+89xGO+h384vnvc+rUGRRqHT/44Q9QldiorSrn4pU2wj434oiHzqkI9+5v5Cc/
      fo5L1/qxqVP87LX3ONNyDZF/kJ+98SGNtTW8+8GHXGtpobrSwgsvvkwwKaK2qnwdH23hEdqn
      8MwSgCMffMz3/vh7vHf4TSSZJKOT09Q79FweiWFTRFCo9YRlNh47uJ3oZCedESP3NZRASSV9
      V6+yt7manY8+jQkf9z75TU68/xaHDu1leCLI8PAAv/edf8tbb7/Fob3NTARzJGMhHt/XwHjG
      ikqS5De+/hQA165dRSuXMhkXYRClUGSD6BoexhTrwhmRULnzQXzjXTx6cCfpkkbu31qKM1tK
      g9aH1LKN0f5ucjIVO7bWrddzLQpC+xSeWVOge7ZX88///M/s2P8wD31hB1MJNVvqmzFmvQSS
      InQ6PbWVdgDU1npigxc43zGCTinHbreiLTGjkYvRl1pRSmHfriYuXu7BZjOxtWkrYhHsamrg
      cs8oNpMBa5kVpbaEEp2SMpWIj07PbEGWWa0c3NMI8hKsNjv1ew7SefINunxKttVY0Gvk2O12
      9NZaRi+fZNAVx1qqp8RsJ5uIIpFK0ajVa/80i4zQPoVH2AUSuKsRdoEE7moEARC4qxEEQOCu
      RhAAgbuau0YAzp0+yYfHP2NGtT/O2IhrnWsk8DlJ3nv7LVqvdQMwOjayZne+a3aBTp05izad
      xJmOIQ2P4YxWkvR30PCFJ7jvnm3rXb27nDhnz7SRSAUY7b5CrqSSHeUWPrnYyR98708wKIp3
      Z2nxit5YlOqURLN6auVZtNo6jNMRpBgxlZetd9UEkJJJBKlp3I5GocBYVo6UHAcPqFGs1Hpo
      iRRsBMjlcohEokIUJVBghLaZn4KtAbLZ7OKZBNYFoW3m565ZBAsI5EMQAIG7moIugk+fOIZY
      ayPsc/LYY48R8U1z+vRpDI560uksDmOSpLSehhpjIW8rAAz1dZFKJ/EEk2iUOnRGOVZ7NSqZ
      8I670Q9Lq5ro6enhm7/2Na61nCOUKrAARKMxRKIwdvuMRqJKrcZQVk3EO0EoBgf376GrfT7z
      CYHVIJEqKCszE0pOkUtF8QayVFaKyGQyZLNZ7pLd7rzI5Ap05gq2N9WSiUVIp9PodVqck+HC
      CoDFbAZNKVMjfSQjQVDqCUcC1NY2Mjg2TX/7EC6/HBC2HgtLllQqSSQtw6zXYLaWo5BDMplB
      pZhpYomkyPuJGxjnhItoLEzY7aZ+5x76+nqJBXxYzLbCbYNmMpmbDzmbzeENxTAbNobO993O
      rW0jMIPLH8Fi1BRnEdw75uEP/vvbhKKJYhQvILAqXP4I3/37d+gf9y5TAHJZhodGyGZSjE84
      SSQSxGIxbh9CGipMbKs2o1HKC1drAYEC8f65Pg41V3C6bXR5a4C4z4Xb78IXTmDRSOkb9iOX
      qqirqZiz0Co3aRmd9uMw6wr+A+4WRCKRMHUpMMNTfgYn/fzV7z7MXz778fIEIJ1NQy4LuSxO
      TwCzw0oyHEEkFiPO5WY1Vo29hAlPmGpbScF/hIDASshmczz3bivf+/o+AH7/V+8pziIY4Erf
      FO2DLr71+M5CFC+wCoRF8Azvnukhlkzz6w9vv/ld0U5Jqm1GRqfz+Z8XEFh73IEop9tGeeaB
      plnfF00AjFol/oiwC7RWTE+OEYmnmBofJRSJk0nFiacEJbgb/OjtS/zOk3uQ3OY5vKj2AHKp
      hGQqg1wmDL/FRi5X4BrtZsybpjadoTccZ8/2rcJJMHCha5JSvZJau4F0erZ7+qIKQGWZnqEp
      P42VpvwZkhGOn75AXdNOxJk4DoeDiN/FwFQQi0ZEXKxFkvAiMziwmYTdpPnJ0tnZSW3dFjQR
      P1OuAKVlemLJLJrrFiV36xogGk/x2slO/svvPzoTs+A2iqopVWU1MOEOzZ9BrmFPUxWJWIQ3
      3/0QgGRWQsA9iUypYnykj48++hTmnDQIzEbMoQcewmqv5J49O9m7fzc1VVtudv67mRc+uMJv
      PtqMWinLm15UAaixGemf8C2Yp3/chyITRpSN0Ts4RmfraQJpGSc/OoZKX4rFXEJHR2cxqylw
      h9I57CYYSfCFbY558xRtGxQglkjxP35+mr/63YeXVMbU1BQ2m60Q1RG4hbtxG7RvzMv3Xz/H
      f/69RyjRqebNV9QRQKWQEU2klpy/rMzKzz9qwxeKFbFWAnc6oWiC5460UmMzLtj5YQ28QujV
      CkLRBDr14r4tcrkcr5/sZFdt2aIVFxDIx8h0gO//8hx/8JW9bKs2L5q/6AJQWaZnxBmgecvi
      NgCBSIJkKoNSftd4axGYh7bWc4z5kpiZIG19FIdsmouX26jZuY8rLZdpKDdgdDTS3Fhz85rW
      3kl+8XE7f/bN+7CWaG+WEZ0e4uAXv4pRluSjDz5AaqslEgiyq85WfJvgLeUlDE0tHBn8BtcG
      pnGYdUx5I0WulcBymBjqZWTKTev5MwSiKSBL64VL+H1OugdGCXmd+COFtfSTSGXsb66ld8TF
      tMtFJBpnd1MNSWRotVq8Ph9dXZ9vjhw528t7Z/v4y+88hLVEe7OML+zfjV5vpK9/kFw2S/We
      +7CoZTjKShBLpMUfAaqsBg73O5eUt21wmscP1OH0hYtcK4HlIFerGRoYRJFL0z8wiCHtZtib
      Jnj5Ct3DLn7ta/uYGhJhbC6cpV86mWTCF+eb3/4uY0PDiEu34R4botYgQtlQT7VFgzsqIpvN
      8fyRVrK5HH/+rftnnfSmk0nGJlxYbVZKS7SMBxL4pkbZsXMnbn+ETNRVfAFwmHRMepbWoUen
      A3z9ga28faq7yLW68xjq60aqLSXpGUdurkQuSqIrsRbEKP74sWM07N6Pb8oLaQ9KvRpJpB2x
      aS+m0iyeySk6ej00F1AAdu679+bfFXVbASgvmQnmbbkeWmx0YJr/9rNP2dNg46v3NS5Qxueh
      mLbWVgNgNpmAquILgEQiJpXOLJrPG4xhMaopM2qY9glToOWi1mgR5WJ0DY9TmlWQJcc+i60g
      qhBP/9Zvz/zR1ETIM43UWEZj846Z7/Y0AFC7lTlqBsXmJ0dauafBxpe/ULviey9LABLREEND
      Q+hNNvyBEBV2C6lUipLS0gWvsxjVuAPRBW2Erw1Ms2NLGXKZhERqcYERuJUsXo8HU3k1Dz14
      P6GMBKU0SzSZQVNgo/gSa/7IjkfO9tJcY6HaZmRssJvPWnvYVWulZyLI07+yn1++9iFl5eWM
      9bXT9IWHaL/Wzrf/zTdWXA+XP4JOreDbT+xecRmwTAFQqHVodUaSqTh2jYzByXFUUhVGo3HB
      t0yFRU//mAejZn4TyWsDU3zt/q2k02nEIkil0tzt7iyXbhEmpmnHrpuf5tG8Khrtg9O8dqKT
      E5eH2LGljL0OCYfuPUg6OIVWm4FMnIr6HYhyCZp276PcIMdw6N7FC16A10928WsPr96r9zKn
      QDlkCgVaSY6hCS/l5WUk4/G8FmG3UucoZWjKz8HmynlLnvSEqbLOOMwqK9HiDcdvruYFNi5n
      2kc5craPf/g/nkCjlHOuc4xn3z3OlDfKd5/YRkNjHV2DEYyKJFu27SARiRENOBkdHqGmupyV
      jEvBSILR6QDf+9q+Vdd/mQIgoqxsZqGz22Rd8lWVZQZOXB6aN90bjFGq//zgy1qqYdITFgRg
      g3PkbC9X+538p+88dFPl/VBzJYeav03vmJfXT3RwbmyAx/bXUm61oJBIUOi16PVabJWfL0zH
      BnvonwpSpoG4WMc9O7Zy7tw56qrK8cVBnvEh09dRXqYB4N0zvXzlUENBfsOa+M2zlmjwBudX
      b7gx/7+BrUQrLIQ3MNlsjhePXmXEGeA/fPP+vPYeDRWl/Pm/fYA//Opejpzt5S9+9BHnO8fJ
      ZudOk202Owq5jHJHJVKJBP/0KP2j05jtlSSjQarrbfhcM/0hlkjR0jvJF5rmV3BbDmvoOFKU
      98cDXOmfYkft5wJgN2mXvHUqsLZkMln+6Y3zSKVi/vjr+xGLF16oWYwa/tN3HuJvv/cl+se9
      /MdnP+ajS4NkMp9bq7W2XCKZSnPxwjky2SzD7ii5RJD29nbau/rpau9laHwIgKMX+nniQN0c
      y66VsmY6Bw6LjjFXkCqrYU7ahDuEw6y/+bmsRMO0XxgBCsX4UA+D0xEqjaC278JmFPHpR8ep
      aWqmp7ObhsYaugenePzhQwuWE42n+H9fPs39Oyv50r7aJd9fIhHjMOv55mM7eTqR4v3z/fzZ
      D47xpb1beHx/HQfuf+R6zn2QS5ITydm9fWbvv7l5Zu+/qRmSqQxn2sf4r3/w6EoeQ17WbASo
      LDMwnEclwumLYDHO3h4t0anwCxqhBcN6fYpRW2XG40tBJs6Uy8fZ4x+TyGVRG8xoFAs7MRue
      8vPt//YGX9y7ZVmd/3ZUChnPPNjE3/7hl0hnsvzHZz/mb144STR+XWtYJGe+MeXTqyMcaq5A
      Ji2caveaCUCt3ciwc66XiGv9zlnzf4HC03ppZorR1dXP6Gg/w/39qHRGamrrkJDk7KdniCdT
      LHT6Eo4leWBXFYeaKwpSJ4VcytcfaJpZQEsl/Ozo1QXzZ7M53j/fx+P76xbMt1zWbApUWWbg
      rc/mqji0DU7zG49un/O9SiEjHEuiVQnuFZfCUF8XaZGMdCJCMilHX6q4GR/gwP2P3Nyibsol
      icZEPNW4Z1nlH7s4wIEKMZ+db5m1WzPW3YrIYOfK5Xbqayvp7hvmV3/18SVvb+o1Cv7Dt+7n
      rc+6+P5r5/h3Tx/IO78/0zHGPfW2eU0bV8qajQB6jYJQbK7G4JgrOGv+fwO7SYfTKyyEl4pE
      qqC6yoFCY8JhUeMNxJFLP48PkE6nSafT/O2/nqW1b+Lm56X8C0fjeAJRDuxsRCaRYLXZEYsg
      nQwzPtBFV+8owUQaS8UWbBYjuWWUfePfV+6tp9Zewv/4+am86UfO9PDlg3XLLnexf2uqeC+X
      Skgk0yiu6/uPu4PYTfn3+m2lGqa8EeocC6tZCMCN+AA+X5BkPAwWO7u3W/PGB6ixlzI4FeD+
      XdVLLv106zBf2F7B1SuXSUt0tLZcwlTZxFD/ALGshFROjEWZIuhxYnLU5/W+sBSeuq8RlULK
      O2f6eObBzx1YXRuYptpmpERfBHf7uQKRTqcXzfOTI6257hH3zc/vn+vNvX+uN2/eC13juVeP
      txeqenc1t7ZNOp3J/Z//9H4umVq8vW7wV899kgtFE7O/zCZykUiyQDWczY/fuZT7l/cu3/z8
      n39yPDfpCRXlXmsaQKrcrGPkloXw1YFpdtXlP1G2lQqHYcVAIhHz2L5aPm4ZXFL+cXcQjVI2
      dy0mkqNWF3Y+foPvPrUXgGcPt9A/7kWnUWArLY5WwJoKQN0t1mHZbA6nN4x9HodXglp08Xj0
      nho+bhmc92DyVj5pGeKx/Svf9lwpv/PkbrRqOX/1/HEe27elaPdZUwGosOgZcwWB64tfy9zF
      7w3kMsmS7AgElo9KIWPHljLOd40vmC+bzXFtwMnueUbpYvPMA03cv7OSyrK5h6eFYk0FQCGX
      Ek/OGC60DU6zq3bh/X+RSDTryFygcHz1/q28d7ZvwTyX+6bYXlNWMLWDpdBx5SKpeIRJlxeF
      XMoze0tJpNK0X2khns4yNT6+4HnFclnzILIGjRJ/OE7bAvP/G1iMGtzB6BrV7O7CqFViMqjo
      HnHPm+f45SEe21+86cdckqg1BnpdCdzOSQBGp9wMtJ+g9UoPJ0+e5L133idewDsuTwCyaXq6
      uggFA3T2DBAKhfB6vcvy3FljNzI46cMTjGIxahbMKyjFFZdnHmzi7dM9edNC0QTeYCzvGU3R
      yCQ4euwE0pibSy3XcPt8hLxO4iIz9dUmMrEoGVJMe4IFu+WyNmwDU2NEcjDu9C7LIuxWKsxa
      zraP4TDrFrXjNOtVTHlCpGsWd3B0J7KcGGHTk2NoSqwE3E5MFgtScY4UcpQLGMVXlhlIpTI4
      fXNtL05dG+WRPTWrqf7ykej4oz/5LgCNjY1MTU3xpSe/VtRbLksAtKUmFIFR5BIY9oaXbBF2
      K1vKS/mnNy7yp08fWPTAxGHRc6Z9bMUHK3cTcrkC51AH0hIHnVfayGo0S4oP8OWDdbxxsovv
      fmW2asQnrUP85bfvX3ND91sxm81Fv/+yepZEqWP7trl6O8uhzKghkUqztWpxy9WyEg2ugLAG
      WJzr8QG2VDM2MY5KpUOtky0pPsA9jeX88kQn8VT25l7/iDOAw6JDp7nz3VOu+as1GE1g0ChJ
      L2F3R1CLXioz8QEArI6lqzjc4Mkv1PPeuT5+45GZl9vRC/1rP/1ZJ9Z8F8hsUPPTv3iaigXO
      AATWlvt2VHKuY4xUOkMqnaFv3LvoDt2dQtFHgISzj8OtE9TbtYxPB/nVxx/hzIkPKamowzs6
      iFJnxOcap+HA41SZlHOuVylkS/YuLbAyJBIxD+2u5sTlYbRq+bodfK0HRR8BElk56lwApydM
      KDyzpSmTy/B6A+h1SlAakJIgN8+xvN2kE1Qi1oDH9tXywYV+Pr40yOMHCmt0spEp/hRILkcm
      01BTWYbFYqGrqwu5XIFOLcMTTCDLxsjKjGiU+atyQy1aoLiolTLqHaW4FvHgd6dR/AAZJhuP
      PTYT9qjxdlcu1w2eYce811tLtUt2ry6wOrbXmFHcZSFtN/wGu61Uy7mOhZW2BArDg7uqeXAZ
      hjJ3AhteAMqMGlyCi5Si4BwfZnDST2Cqn6zSzJcf3c1LL75DRV09YWcfGX01kVCA3/rGU/N6
      atjsbHgBENSil0ZXdzeNNXbaesfQqbRodLJF4wNYHdW4/WEiUikJcpBKIlXrIJ3A2nSQXMRH
      WmsmwyboKCtkU/yuG2rRa6mWu9kw6A3kshnSqRSRTABPVLJofICJoV4mPUEa6xtIyTW09/tp
      qLFQVl5JZ2c3O3buZNobgnSa9VOIKC6bQgAsxhmViGKZxd0JhPwuRCILapUCo9GMTitbND5A
      Vf02qupv/3Zmp8LhmPHkbbPe2WcCm0IA7CYtU96wIAAL0LhtJ4AQaHyZbIo5hWAfLFAsNoUA
      2E1aJtyh9a6GwB3IMi3C4rRf6yDg963YImwllJUII4BAcVjWGiAbCxPNgNMbXLFF2ErQqWT4
      w/F1Nc5YD5ZjESawMpYlABmJCr0yh1wsXrFF2EoRiRAswwQKzrJ6lEypYWtT8+IZi4CgFi1Q
      DPKuAXLZLKlUquhz++UgqEV/zkZsn81KXgG4dPYzLl68uqFO/2zXI0cK5G+fq9eukUsGabnc
      xtjwGEMjg8RSglOxxcg7BTIZtRw718OBQ6uPw1ooBLXoz8nXPhazhWwyTjyZwjk1iUitpbJS
      tKhXiLudvALg9keoMBlIzZdhHdisatHZZIi3jp7hkf0NtA74+OJ9e+k4fYSotoGx/nbKa2qI
      JzI8dO/SXzb52icRDeCWWdlSbkJvsqKUkzc+gMBs8vTvJCqFBokis2E6P2xeteij777HuCvK
      kaOjZORGUjvL+ez0RQL6BP/+N5o5djGAKOUnA0sMK5S/fWrqtl7/y3jzO5XQ5xclTx+XEEum
      sBi0ZIDieIBfPnKZ5KZj3c3Ek8/8JuPj4zgcDsbHB+kfj/BHf/LHjARFHD93jT3bqukbyS45
      ptZGbZ/NSt6XfCLiw4+GvWtUiYGOFjonY1hFY6Stj9KsnODd3iAP7NjCyIQLkypH+5AbkGzK
      rVCHw3H9/1vIZnOEEymq7HKq7F8EoKp6eUboa90+dzJ5doEkSKQyYhPDdI0516QSbR3deMe7
      6B1xMe1ykVQZUfoGSGvLMWgUKJRKNNoZjdAz7WNrUqdi8d65Xv6vf/pgFSWsfUCJ6Y0AABey
      SURBVPvcyeQdAaprqkiJ1dRVrI0u+Nd+/ZsEg0H0GjljQ8NEpXrsDfegCA4x5Akht2poqK/j
      yZyBspKFPUpvdKa8kVUHfFjr9rmTySsAk1NOtFr9mtqB6vUznuIqri/mKstmokPaqz6fHgy7
      Ypv6MCyZytA14ka6Ssu29WifO5W8LaFUKEgkNt5Jo3WTB8470z7GAzsrEa+y527U9tmM5BWA
      MqsV58gIc8Nary8VFj2j04ULjrCWZLM5jpzt4csHG5CIxasK/ZSvfbq6uwEYaL/MmNPD9PSk
      cBK8BPJOgYLBIDFRjo3mHFuvURCMJta7Giuia8RNQ4UJuUyCUafEF46v2ANbvvYx6A3EA9MM
      DI9TmlWQJbeoUbzAPAKQTCRQiSQkYMMJwWqnD+vF0Qv9N6Ofl2iV+EIrF4B87RPyuxDLKnno
      wfsJZSQopdlFjeIF5hGAXC6HtaIiT2KOM8dPUtm4hekJL2aHlXQsxpbatYsjq1LIiMZTqJWb
      5wgoFE3gDkSpts2c0hp1KnyriHuQr31uGMUDLB56ROAGeQVArVbh9AfmfB+YHieazuENxLCa
      DPhDAWQSJblsds2GWYtRzbg7wBabcfHMG4SPWwZ4ZE/1TYs2o0aByx9Z1MJtPouw+dpHYPnk
      V4Zze4n6g6SZfdRuKKvggQfMSGUSpqa91JeXk81k1sQi7Aa2Ui2eYJyGio2kqTQ/2WyO850T
      /OV3Hrpp0WY2amgbcK7Ywm2+9hFYPnN2gRJBD/Yt9ch0OvIpHCiUSiQSGQ67FYVCgUqtXtP9
      aGupFqd389gFdI96cFj0qBSfd9USnRJvaGXRbhdrH4HlMUcA4qEAHb0DpKLRDWUQc4PN5iPo
      6IV+nvzCbPdrJr0Kb3Bla4CN3j6bjTljsMFRy5ds1SASb0inQbZSLc5NIgDhWBJvMEZtecms
      71UKGfFkakVlbvT22WzknYSKN/CWmVopIxJfWedZaz67OsL9Oyvzps0TEWpJbOT22WwIL5Ei
      cuLKMA/srMqbJhGLyK5GCgQKwqYUAKNGQTCysU+Eu0fcVFj0855X6DUKApGVLYTzcfXaNcgk
      6Oq4ytXLXYJR/BLZHHuJt1FWomHKG0av2bj7IMcuDvDlg3N8j9+kVDezEC7RFeas3WK2AKDQ
      mLAYMgx7I4JR/BLYtALg9IZprFzbM8/RgW6On2/n4X31tA74+PoTD3Pu8POktzxBcLKPgzvr
      6RicxF5Zy5grSJ2jdN6ySvUqfOHCjQCJaIApFyTjYbDY2b3dKhjFL4FNKQDWUi0jzrU/CVUq
      FGi1Gq62dRFISEiFphiYCKAvS1JjN1NqdVDi9nO6bRT9ImabJVol/hWeBeTjhlH8rfEBBKP4
      xdmUAlBWouF859q7SMlms9TXN7CzqZZg0EP/uJ9v/u4fMe2P0NExTFdXFy6Xn3hWw68/sn3B
      skr1KjqH3WtUc4H52JQCYF2nwzBrZS03jBD1ehN6/cwUrKxMQ1lZGQBNTfDxc5+w5fGd85Qy
      Q4lehb+AUyCBlbEpd4EUcumGjRyZSmfI5nLIpAvPP26oRAusL5tSAGbYmPvow1MBtthLFs2n
      U29e4547iU0rADesqjYaPWMeGivm3/25lc1q3HMnsWkFwLZBwyZ1DruodSw+AsCMvv9GHMXu
      JpYlAOlElCsXz9DeM0DLxcuMTE4yMDCwLt4JbpwFbDS8wRgOs35JeXUqOeFYYVwPDA4OQi5D
      d3s7Hm+QUMgvnAQvgeXtAoml6A0afNHkulmE3cBsUNEz6tlQccP84TgKuXTJdTLqlLj8YdSK
      /Avm5cQIUypVJH1TGGsaGWtrIa3Rs7fZIJwEL8KyBEBElqxYx+4dFetmEXaDcrOeM+3jGypu
      2JAzyI4tZUuuU6leTSCSLMhv8DjHEdvsOEc7MForUWvEglH8EljWk5fIlNTVbQHAYV9ft3xm
      g3rD2QX0jHjYUVu25PwlWuWKDWNuZ8eemfgCVlt5Qcq7W9i0i2CZVLLhzgJ6xjw0LHEHCMBk
      KKw+kMDy2bQCACCViDfMLko2myORysyy/V2MEq0K/yrcowisnk0tABajBldgY0yDxlxBKsuW
      tvtzA6NOiadAUyCBlbG5BcCg3jBnAV0jburKl7b/fwOjVklIOA1eVza1AGwkb9G9Y95lLYAF
      NgabWgBmDsM2hgCMOP3YS3XLvm6DLGHuWja/AGyAyJHReAqdWoF4Bco9OpVcmAatIxvnFGkF
      WAxq3BtAAPrGvdQuQQM0H0adkkC4MIH/sokgbb1j6FRaNDoZuhIrKtmmfscVnU0tAGKxaENM
      IbpHPTRWrcw+2WxQ4w5GqVjmDlI+ctkM6VSKSCaAJyoR4gMsgU0tAAAyiZhUOrOoAUox6R5x
      8/j+lbmIv+EdohCIZCrUKgVGoxmdViaoQiyBTS8AZSUa3IEodtPyF6CFIJvNEYmnMGqVK7re
      oFUULOyTWKqkqampIGXdLWz6CaK1VMukZ/3Uop2+MGbDyn37FHIEEFg+m14ALAY1rnVcCPeM
      etmxZeX7/6V6lWAbvI5segGwm9Z3BOgd81BbvnQFuNsxaJQFdZEosDyWtQbIJKJ0d3eQkRlJ
      RcLrEiPsdmb0gaLrdv+hKT+/Z195uCaxWCTs0Kwjy1wE59CYKpFk4oiU62sRdgO9WoY3EF0X
      y7B0JosIyOWypNMrNz/M5chb/+VYhAmsjGUJQDYH8bAfR0UlgWBoXS3CZiESrYtlWO+4mzpH
      6arvrVLISKZzmyry5Z3CslpOptSwdeuMD0qtZmUxbouBSi4lkUyjkK+tEHSNuKlfwAHuUim9
      HjKpEAIwNT6KxmhBLYcUcpTCSfCCbPpzAACzccY8sspqWNP79o56eGh39arLmfEUHVv1aXAm
      4qJvzENtOkNvOM6e7VuFk+BFuCMEYCZuWHjNBcAViGLSr96//4xt8Op3gkQSORqFhClXgNIy
      PbFkFs11jxPCWiI/d4QAzATMWNuzAG8whq1UQ9/VM+jrDjF67SSOhj3oJHHOXLhC9ZYapr0R
      yrQiYiItu7bVzVuWyaBizBVadZ3ESgP37FnYKa/AbO6ICaKtRLvmWqGvHu9AJBJRb9Pjivhp
      bxsnHImgNliwGzVMuTykUinCiSzp2MKxDATb4PXjjhAAa+najwBOb5jH99fS3jvE+JCT6poS
      AhMDtF68wIAvjqXESDgcIpcIE0sv/JgNWoXgHWKduCOmQGvtaXnKG0YmlbCz1gq1X6EZgK1E
      o1FUajV7r+dbqmKaoA+0ftwRArDWvHe2lycPzp3Tq9Ur2xqWSMRkNoJhw13IhheAmUXmAfou
      nKS8cRc15WbOnTtHY005naM+DNI47qgIjVJGOJZEq5IXtT7JVIauETe/96v3FLRcwVX6+rDh
      1wAzi0wpep0Srz+Af3qU/tFprl5rIxaNsH3HDrQaLeFYko9bBoten0+vjnD/PMGvV4NCNnOY
      J7C2bHgBaO8dYrz/Kp5ggmxwimF3lFwiiN5kIxaJMDQ0RvOObTx1qJH+CV/R6/PhpQG+uHdL
      wcvdqAE/7nQ2/BSo+f4bi0xuLjJ3b59Rx7h1EvLArio+aR3C6QtjLdEWpS7dI24qy/RFmWaV
      6lR4AlFspauru3N0CKnOhFySQarUC0bxi7DhBeBWFltkPv1gE6+d6ORPnz5QlPt/cKGfpw41
      FqXsQhjGZFNRvC4X0rSYYCQixAdYAptKABZjZ20Zr37SjjsQxWworLJeMJJg2hehdpnuD5dK
      iU6JO7C6rdB0KkM6l4UMVFlLBKP4JbC88TGXw+f3k8ukGJ9wkkgkiMVi6xIiaT6eeaiJNz/t
      Kni5H1zo54kD86szrJYbU6DVIFfr2LnvINvqq7BYbDc7v8D8LM8eIJ3EFwgTCQYQZbL0DfuR
      S1XU1VRsmGF25xYLvzzegS8URVeguXouBxc6x/mbP3ikaIY3Bo0cbyg2q3zBIKb4LEsActkM
      zolRrGUW/L4Zk8hkOLL+BjG38fSDTRw+3cu3n9hdkPLOd46zq86KXF48gxWTQUMgnNhQIZ/u
      BpYXIkmh5tChQ8WqS8E40OTgtROdBTsYe/9cH3/6THEW1jeQSSUkN1jEm7uBO3aP7KlDjRw+
      3bPqcsbdQVRKWcEX1fkQToPXnjtWAO7bUcnF7gliidSqynn/XHEXv7cilUhIpoRRYC25YwVA
      LBbx5YMNvHu2d8VlJJJpukbc7Kpbm4iYM6fBglboWnLHCgDAQ7urONs+tuy3ajabo3PYzX/5
      6Um2Vq7M6/NKMOtVBTGNFFg6d/SWg0wq4bF9tXxwoZ+v3rfwCW4imeZKv5OzHWNMesLU2o08
      ek/NssKerhajToV/NSNAJkFXdzfJpBx9qQKrvVpQhViEO1oAAL60bwt/+ezHPLCzEoVMSjCa
      IBCOE4gkiMSSnO8cJxJPIRKJ2FlXxlOHGmed9p4/dRyV8gCSuIcLF65gr61lfMJNnU1HWlFC
      c2PhFONKdKsPnK3QmLAYMgx7I1RWigRViEW44wVAJpWgUyv48x98SJXVgF6jwKBRotco0Knk
      VJYZ2LfVztYq89yL4+O093mx1ETZ4qjCUu5id3Mz6fglomkRuZQPKJwAmPRqBleh0ZrN5kjG
      w2Cxs3u7lWQyg0pQhViQO14AAP7s39yHSCRCLpvpBEM97ShN5Vg08OnZSSrLami91oVJDaGM
      kubGmpkLlWXU2NS4h3vQ6lXoDGbC08PYa5sZ7zxHRlFYvSCVXLoq7xBimfKm4zIAldDnF+WO
      EYAzJz6kpKKRphoLJ06cRq/TMelPUGnT4PQmeOzhzw/w3P2dNFU3Mdp+jrhGz5lPPkbv2Epb
      2zV2HPziLaXKePSJJ4lGo6jVaiy6GVVlLVB+38MF/w2uQIS2wWkymSwSiTB3XwvumKcsk8vw
      er0gUVJaoicUjqAkQCAKg4MDs/OaLLRevIDI5CDa3UJaY6ars4Pq6mpaW1rnlL1SW9/lcqDJ
      wQt/8bTQ+dcQUa5Aq6NMJrOu88yrl84iUmmRZdP0jbjY2dxAX28/NbVbcPsjHNw722GUb3oK
      tdmGYp372uuvv843vvENhvs66Rrx4CiREcxIiUyNUrH9ANtqHau+x3q3zUbmjhGAzUjv5U95
      6b2L/Pt/9ycQ8+AMJNDJ0mSkKXweA7nsNHv37l28oEUQ2mZ+ViQAiUiAgXEPFXYLqVSKktJS
      ssJDXhHj4+OEQiHSsSCBlBxx3I2mbAvR6QGqtt9LuXkZwf9yGbo7ujDbK5HLsjdNIgUBmJ8V
      CcDY2ChaEYxEIqikKhpqq4WHvAFIesfxKcqYamshrdGzb8c2QBgBFmJFM2CdSs6wN4zdZEGt
      kG4oi7C7GZmuBGdfB0ZrJVXWEiIJwc3KYhRkDZDNZslkMojFwu5FoVnNmzuXy5G9Hr5KaJv8
      FOQcQCwWk7vNIiyXyyESzSi43z4ELzXt9vQ7IW25z2Y13GpSWei6Fes3306x71mw18KsN0wm
      ydj4JOnr/i5vf/u4nBNE4sm8aaPDg3j9n0dOv5Ee9HkYHx/H5fHNSQMI+r34/KG8aT7nKL0j
      U8u7LpdjbHyckdHRvNcFfD4yt4ydS03ze73MhNabm0Y6OksbtFBv7aU+p1gkhNPtvTmlnV23
      GP2DI4Sjc+uXiIYZHx9nbCL/M16w3GyKvoEhvN78KiC39pVZ1y7SPgs+Z7h5v4IJwGwJFpHN
      JOjs6smTNiN9k0M9eCOpWWkBnxu3108q9bkRy410hVpLNp2cVc6t1+ZyOTyeaSadrjlp0ZCP
      wdHJ5V2Xy+Dz+QiFo3mvk4uTnDl9jlAiU7A0RDK621uZcnnzPreVstTnJBJBNOhjYHhsTtq0
      c4JgKEL6FrPNm22jUJC9bSa91HLJJBgbnyAQya8EeGtfmXXtKtoHYGigl+GxiSKdBKejjDsD
      VFVV5k0eGxtHb3ZQqpltZG4oMSOXSXG5pudco1AoCIdCzLdiCXsnGZjwYbda5qQlxWp2Ncyt
      SyIaJhyNo1Rp5l4nlqJXiwlF8luUef1RUtFp/NG5C82VppGJMO2L4vP78//IAjAxPoZMoc77
      nPwuJ/GsGEe5fU5amcWESCzBOT23bZDIyMQj83q4joQjTI4NoTflMSzKZTCZbVhMc9XOgz4P
      qQwYLHP7ymraB2DK5SLg9xVJAGRq9Cox0Xmk2mDQE47kD2hhtdrYvi2/X32tTkcylcybpjZa
      KDfljxGmVipJpuY+KIVai0Ypo38wv1Ndg8GMRJx/Hm406LFXNmDSzvUUsdI0JGqaah2YTXk0
      UwuEzVKKy5s/Yo2+1EIy5COVL+SxWI6jvJzG+vzar2qtjkw6f2eUSuU4KiqQSfKMaBIlCkmW
      TGbuTfUlJsRkGBwazlvuStsHYEfTVoylpuKNAME4JBL5BSAYCJLI0yEBxoZ6uNbZlzctEong
      ck4Sv83Cy++apKdviPmWjAqFnMGhoTnfJ+NRpqacmM3zmzzqdHkOojIpBobHUEgyBG5/A600
      DZieHCaWFhMOB+ekFYpYPEZknhdTMBhGLk4RSeR5kiIZ7a1nGJ5w5b02EokQ8HsJhG5z7pWK
      0tbVhdsfQynNN6UTIZOJGR4ZnZMSDvpxTk1hd1TM+3uW3T7MTLW9wQjRSKRIAiBRYTNpSGfy
      D4k2u430PG9yty8EubkNEPB50CqlKAxWlLLZW4NylQaHw4FOrZhz3UKdXCZXUr91G+Jc/rp4
      vT5Cfg/DY5OzEyQyysttSFUGSjXSuWk2C9mcGNnt1lgLXQeUldlRKmSYSotnhabWGlHPowBl
      MOiQSOTkXXqkgkRyauJ5hDMRDSFTqBBJZBh0tykOiqU4HBVYTMa8UySvexrntJuq6rnhZtUa
      HTt27yUS8OSt74rah5mptlalRCIRF1MdWoRWp8mbEo/H0WnnSu746DBNzTuQK/Jfl8tlgbmt
      I5VKkclkyPK4ArzRyfv6++fWUCxGJhazbZ5QRgaDEbFSk9e3UCIUJKvS512oSqUScoiQ5dHq
      XOg6yBCJJoq+Z5/3rclMu0gV6rxmlANjHnY3VaE3zp2e5XIz/8l7pCQSo1TMPL98z0NvsrG/
      xMTgyATG+tpZaWKJBLFEQtMtNg63stL2gZk2QiIt0giQieL2x9HOo0Ycj8VRq+bG17VarcTD
      QfzhuT4yDSUmquqb2b7FNidNrlRjs9mwlc1tHJFYjEwmm7eTL4REImJkdAyTaa5hvFanxjkx
      QSLPKNc/NIxcAqn03HntQtchUZCMBQlHVucjdCEmp5wYDfkDcosySRIiOfI8c3VrWRl+r5d4
      cu6UQqnRUVlVxT27dswtVCydaRubDbl0bneTSqXI5Coab+v8S2Gl7ZOIhpmcds8cEC77rkuq
      mYZc3IPbn9+6SSKVEgjOXYhNTYwRz0iwlKwuYnrhyKFS5g+EHYomifjG8+4y2MvslFmMJPMI
      wELXkYkz7Q0VdReo1KChu28ob1oqk0OejRNJzq338FA/Sq0RjWruNHP9WFn7KNRaHA4HMqmo
      SFOgVBBXRIQhHARmb7cFfG4QS5HL5w5bFTX1zL/cWVsC7kk6e0fQGPLvLGlLTDxw/0NE87xD
      1Cox1/o97Nszd7QyWSyIlAdxlOTpSCIpBw8eRErxIl6G/G78kXzCl8IfiiKVyZDkmTZs37Wv
      aHVaCatpn1w2jd89ja26oTgjgMufYHdTJXZ7+Zw0Q4mZvoEBErG1jeu7XAxmO4cO7sdSYsyb
      PjE2zNDoJDLpbbo6CT/jATGNVgUTgbkdWSyCRDhAKJ6nE0oUxAPTIClOoL9ENIyqxME92/JM
      NyQy1Eo50+ODBOIb3zvditsH6O7uZceevXimi3QQZrGVU1lZTTg093jb7fFQv6WaUnNZMW5d
      UERiCeX2uW9xAL1KhUySxRu9bU6s0KOVxPHEJVj1c9/yoWCQXDadfw2QjtAx5MTnznPYVAAU
      ai0VFRVIxHnunQwhUyoRG2ryj04bkBW1D2C3mhkbHcVkthbXKN5RPncECAf9pDM5xAU65l8v
      NBoV1zpHKFdZwXhrhxFTvWX+BZ1apSIQiaOWz30zBcJpyjQ5TLbiTgTztQvZNC63F7VKRzaT
      hTwL1s3E/O0DhlILhus7zf8/mWKoXShEqc0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Influence of Temperature over Electricity Consumption for each Building' width='192'>
      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
      MtzqBgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Influence of Temperature over Heating Consumption for each Building' width='192'>
      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
      B9LgJC6LNksMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Influence of Temperature over Heating and Electricity' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
